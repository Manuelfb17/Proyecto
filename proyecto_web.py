# -*- coding: utf-8 -*-
"""Proyecto web

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_rceWy4rupwkHGTzmu-nuIZq4AjSMvIr
"""

import streamlit as st
import pandas as pd
from datetime import datetime, timedelta
import calendar
from PIL import Image

# ----------------------
# CONFIGURACI√ìN DE LA P√ÅGINA
# ----------------------
st.set_page_config(
    page_title="Registro de Horas Extra",
    page_icon="‚è∞",
    layout="centered",
    initial_sidebar_state="expanded"
)

# ----------------------
# CABECERA DELGADA FIJA
# ----------------------
st.markdown(
    """
    <style>
    .fixed-header {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        background-color: #ffffff; /* color de fondo de la barra */
        z-index: 1000;
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 8px 20px;
        box-shadow: 0px 2px 6px rgba(0,0,0,0.2);
    }
    .fixed-header img {
        height: 40px; /* tama√±o del logo */
    }
    .fixed-header span {
        font-size: 18px;
        font-weight: bold;
        color: #333333;
    }
    /* Para que el contenido no quede oculto debajo del header */
    .stApp {
        margin-top: 70px;
    }
    </style>

    <div class="fixed-header">
        <img src="https://upload.wikimedia.org/wikipedia/commons/6/6a/Peru_Red_Logo.png" alt="Logo">
        <span>Registro de Horas Extra</span>
    </div>
    """,
    unsafe_allow_html=True
)

# ----------------------
# LISTA DE FERIADOS
# ----------------------
feriados = [
    "2025-01-01", "2025-04-18", "2025-05-01", "2025-07-28",
    "2025-08-30", "2025-10-08", "2025-12-25"
]

# ----------------------
# FUNCIONES
# ----------------------
def convertir_hora_simple(hora_simple):
    hora_simple = hora_simple.strip().lower()
    if "am" in hora_simple:
        hora = int(hora_simple.replace("am",""))
        if hora == 12:
            hora = 0
    elif "pm" in hora_simple:
        hora = int(hora_simple.replace("pm",""))
        if hora != 12:
            hora += 12
    else:
        hora = int(hora_simple)
    return f"{hora:02d}:00"

def calcular_pago_horas_extra(horas_extra, valor_hora, es_domingo_o_feriado):
    if es_domingo_o_feriado:
        pago = horas_extra * valor_hora * 2
    else:
        if horas_extra <= 2:
            pago = horas_extra * valor_hora * 0.25
        else:
            pago = 2 * valor_hora * 0.25 + (horas_extra - 2) * valor_hora * 0.35
    return round(pago,2)

# ----------------------
# ENTRADAS DEL USUARIO
# ----------------------
st.title("üïí Registro de Horas Extra")
st.write("Registra tus horas extra y calcula el pago autom√°ticamente")

nombre_empleado = st.text_input("Ingrese su nombre")
sueldo_mensual = st.number_input("Ingrese su sueldo mensual (S/):", min_value=0.0, step=10.0)

entrada_normal = st.text_input("Ingrese hora de entrada (ej: 8am, 10pm)")
salida_normal = st.text_input("Ingrese hora de salida (ej: 5pm, 10pm)")

anio = st.number_input("Ingrese el a√±o (YYYY):", min_value=2000, max_value=2100, value=datetime.today().year)
mes = st.number_input("Ingrese el mes (1-12):", min_value=1, max_value=12, value=datetime.today().month)

# Bot√≥n para calcular
if st.button("Calcular Horas Extra"):
    if nombre_empleado and sueldo_mensual > 0 and entrada_normal and salida_normal:
        hora_entrada = datetime.strptime(convertir_hora_simple(entrada_normal), "%H:%M")
        hora_salida = datetime.strptime(convertir_hora_simple(salida_normal), "%H:%M")
        if hora_salida < hora_entrada:
            hora_salida += timedelta(days=1)
        duracion_jornada = (hora_salida - hora_entrada).seconds / 3600
        valor_hora = round(sueldo_mensual / (duracion_jornada*5*4.33),2)

        # Registrar horas extra por d√≠a
        registros = []
        num_dias = calendar.monthrange(anio, mes)[1]
        for dia in range(1, num_dias + 1):
            fecha = datetime(anio, mes, dia)
            fecha_str = fecha.strftime("%Y-%m-%d")
            dia_semana = fecha.weekday()
            es_domingo_o_feriado = (dia_semana == 6) or (fecha_str in feriados)

            horas_extra = st.number_input(f"{fecha_str}  - Horas extra:", min_value=0.0, step=1.0, key=dia)
            if horas_extra > 0:
                pago_extra = calcular_pago_horas_extra(horas_extra, valor_hora, es_domingo_o_feriado)
                registros.append({
                    "Empleado": nombre_empleado,
                    "Fecha": fecha_str,
                    "HorasExtra": horas_extra,
                    "PagoExtra": pago_extra
                })

        # Mostrar DataFrame y totales
        if registros:
            df = pd.DataFrame(registros)
            st.subheader("üìä Reporte de Horas Extra del Mes")
            st.dataframe(df)
            st.write("üí∞ Total de horas extra:", df["PagoExtra"].sum())
            df.to_excel("HorasExtra_Mes_Reporte.xlsx", index=False)
            st.success("Reporte guardado como 'HorasExtra_Mes_Reporte.xlsx'")
    else:
        st.warning("Complete todos los campos para calcular.")